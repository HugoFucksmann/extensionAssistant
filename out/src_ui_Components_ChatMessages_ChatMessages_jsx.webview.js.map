{"version":3,"file":"src_ui_Components_ChatMessages_ChatMessages_jsx.webview.js","mappings":"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","sources":["webpack://extensionassistant/./src/ui/Components/ChatMessages/AttachedFiles.jsx","webpack://extensionassistant/./src/ui/Components/ChatMessages/ChatMessages.jsx","webpack://extensionassistant/./src/ui/Components/ChatMessages/Message/AIMessage.jsx","webpack://extensionassistant/./src/ui/Components/ChatMessages/Message/AgentMessage.jsx","webpack://extensionassistant/./src/ui/Components/ChatMessages/Message/UserMessage.jsx","webpack://extensionassistant/./src/ui/Components/ChatMessages/MessageContent/CodeBlock.jsx","webpack://extensionassistant/./src/ui/Components/ChatMessages/MessageContent/MarkdownContent.jsx","webpack://extensionassistant/./src/ui/Components/ChatMessages/styles.js","webpack://extensionassistant/./src/ui/IconstApp.jsx"],"sourcesContent":["import React from \"react\";\nimport { styles } from \"./styles\";\n\nfunction getFileName(filePath) {\n  return filePath.split(\"/\").pop().split(\"\\\\\").pop();\n}\n\nconst AttachedFiles = ({ files }) => {\n  if (!files?.length) return null;\n\n  return (\n    <div style={styles.attachedFiles}>\n      {files.map((file, i) => (\n        <span key={i} style={styles.fileTag}>\n          {getFileName(file.path)}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default AttachedFiles;\n","import React, { useRef, useEffect, memo, useState } from \"react\";\nimport { styles } from \"./styles\";\nimport { UserMessage } from \"./Message/UserMessage\";\nimport { AIMessage } from \"./Message/AIMessage\";\nimport { AgentMessage } from \"./Message/AgentMessage\";\nimport { useAppContext } from '../../context/AppContext';\n\nconst Message = memo(({ message, messageIndex, onEdit }) => {\n  \n  const formattedMessage = {\n    ...message,\n    role: message.role || (message.isUser ? \"user\" : message.isAgent ? \"agent\" : \"assistant\"),\n    text: message.text || message.content || message.message,\n    files: Array.isArray(message.files) \n      ? message.files.map(file => typeof file === 'string' ? { path: file, content: undefined } : file)\n      : [],\n    agente: message.agente || null,\n    acción: message.acción || null,\n  };\n\n  if (formattedMessage.role === \"user\") {\n    return <UserMessage message={formattedMessage} messageIndex={messageIndex} onEdit={onEdit} />;\n  } else if (formattedMessage.role === \"agent\") {\n    return <AgentMessage message={formattedMessage} />;\n  } else {\n    return <AIMessage message={formattedMessage} />;\n  }\n});\n\n// Componente para virtualizar la lista de mensajes\nconst VirtualizedMessages = memo(({ messages, visibleCount = 10, onEdit }) => {\n  const [startIndex, setStartIndex] = useState(Math.max(0, messages.length - visibleCount));\n  \n  // Ajustar el índice de inicio cuando cambia la cantidad de mensajes\n  useEffect(() => {\n    if (messages.length > visibleCount) {\n      setStartIndex(Math.max(0, messages.length - visibleCount));\n    } else {\n      setStartIndex(0);\n    }\n  }, [messages.length, visibleCount]);\n  \n  // Mostrar solo los mensajes visibles\n  const visibleMessages = messages.slice(startIndex, startIndex + visibleCount);\n  \n  return (\n    <>\n      {startIndex > 0 && (\n        <div style={styles.loadMoreContainer}>\n          <button\n            style={styles.loadMoreButton}\n            onClick={() => setStartIndex(Math.max(0, startIndex - 5))}\n          >\n            Cargar mensajes anteriores\n          </button>\n        </div>\n      )}\n      \n      {visibleMessages.map((message, index) => (\n        <Message\n          key={`${startIndex + index}-${message.text}`}\n          message={message}\n          messageIndex={startIndex + index}\n          onEdit={onEdit}\n        />\n      ))}\n    </>\n  );\n});\n\nconst ChatMessages = ({ children }) => {\n  const { \n    messages, \n    isLoading, \n    currentMessage,\n    handleSendMessage\n  } = useAppContext();\n\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages, currentMessage]);\n\n  const handleEditMessage = (messageIndex, newText, files) => {\n    const filePaths = files?.map(file => \n      typeof file === 'string' ? file : file.path\n    ) || [];\n    \n    handleSendMessage(newText, filePaths);\n  };\n\n  // Determinar si debemos usar virtualización basado en la cantidad de mensajes\n  const useVirtualization = messages.length > 20;\n\n  return (\n    <div style={styles.container}>\n      {useVirtualization ? (\n        <VirtualizedMessages \n          messages={messages} \n          visibleCount={20}\n          onEdit={(index, newText, files) => handleEditMessage(index, newText, files)}\n        />\n      ) : (\n        messages.map((message, index) => (\n          <Message\n            key={`${index}-${message.text}`}\n            message={message}\n            messageIndex={index}\n            onEdit={(newText, files) => handleEditMessage(index, newText, files)}\n          />\n        ))\n      )}\n      \n      {isLoading && currentMessage && (\n        <Message \n          message={{ \n            text: currentMessage, \n            role: \"assistant\",\n            files: []\n          }} \n        />\n      )}\n      {messages.length === 0 && !isLoading && children}\n      <div ref={messagesEndRef} />\n    </div>\n  );\n};\n\nexport default memo(ChatMessages);","import React, { useState, useEffect } from \"react\";\nimport CodeBlock from \"../MessageContent/CodeBlock\";\nimport MarkdownContent from \"../MessageContent/MarkdownContent\";\nimport { styles } from \"../styles\";\nimport AttachedFiles from \"../AttachedFiles\";\nimport { useAppContext } from \"../../../context/AppContext\";\n\nconst parseMessage = (message) => {\n  if (!message) return [{ type: \"markdown\", content: \"\" }];\n  \n  const parts = [];\n  const codeRegex = /```([\\w:\\/\\\\.-]+)?\\s*([\\s\\S]*?)```/g;\n  let lastIndex = 0;\n  let match;\n\n  while ((match = codeRegex.exec(message)) !== null) {\n    if (match.index > lastIndex) {\n      parts.push({\n        type: \"markdown\",\n        content: message.slice(lastIndex, match.index),\n      });\n    }\n\n    const [language, filename] = (match[1] || \"javascript\").split(\":\");\n\n    parts.push({\n      type: \"code\",\n      language,\n      filename: filename || undefined,\n      content: match[2].trim(),\n    });\n    lastIndex = match.index + match[0].length;\n  }\n\n  if (lastIndex < message.length) {\n    parts.push({ type: \"markdown\", content: message.slice(lastIndex) });\n  }\n\n  return parts;\n};\n\n// Estilos para los botones de confirmación\nconst confirmationStyles = {\n  buttonsContainer: {\n    display: 'flex',\n    gap: '10px',\n    marginTop: '15px',\n  },\n  button: {\n    padding: '8px 16px',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontWeight: 'bold',\n    border: 'none',\n    transition: 'background-color 0.2s',\n  },\n  applyButton: {\n    backgroundColor: '#28a745',\n    color: 'white',\n  },\n  rejectButton: {\n    backgroundColor: '#dc3545',\n    color: 'white',\n  }\n};\n\nexport const AIMessage = ({ message }) => {\n  const { vscode } = useAppContext();\n  const [showConfirmButtons, setShowConfirmButtons] = useState(false);\n  const parts = parseMessage(message?.text);\n  const files = message?.files || [];\n\n  // Detectar si el mensaje contiene una solicitud de confirmación para aplicar cambios\n  useEffect(() => {\n    if (message?.text) {\n      const hasConfirmationRequest = (\n        message.text.includes(\"¿Deseas aplicar estos cambios?\") ||\n        message.text.includes(\"Responde con 'sí' para aplicar o 'no' para cancelar\")\n      );\n      setShowConfirmButtons(hasConfirmationRequest);\n    }\n  }, [message?.text]);\n\n  if (!message?.text) {\n    return null;\n  }\n\n  // Manejar la confirmación o rechazo de cambios\n  const handleConfirmation = (confirmed) => {\n    if (vscode) {\n      vscode.postMessage({\n        type: \"sendMessage\",\n        text: confirmed ? \"sí\" : \"no\",\n        files: [],\n      });\n    }\n  };\n\n  return (\n    <div style={{ ...styles.message, ...styles.aiMessage }}>\n      {files.length > 0 && <AttachedFiles files={files} />}\n      {parts.map((part, i) =>\n        part.type === \"code\" ? (\n          <CodeBlock\n            key={i}\n            language={part.language}\n            filename={part.filename}\n            content={part.content}\n          />\n        ) : (\n          <MarkdownContent key={i} content={part.content} />\n        )\n      )}\n      \n      {/* Botones de confirmación para aplicar cambios */}\n      {showConfirmButtons && (\n        <div style={confirmationStyles.buttonsContainer}>\n          <button \n            style={{...confirmationStyles.button, ...confirmationStyles.applyButton}}\n            onClick={() => handleConfirmation(true)}\n          >\n            Aplicar cambios\n          </button>\n          <button \n            style={{...confirmationStyles.button, ...confirmationStyles.rejectButton}}\n            onClick={() => handleConfirmation(false)}\n          >\n            Rechazar cambios\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};","import React from \"react\";\n\n\n\nexport const AgentMessage = ({ message }) => {\n  const { agente, acción } = message;\n\n  if (!agente || !acción) {\n    return null;\n  }\n\n  return (\n    <div style={{ ...styles.message, ...styles.agentMessage }}>\n      <div style={styles.agentMessageContent}>\n        <strong>{agente}:</strong> {acción}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n    agentMessage: {\n      backgroundColor: 'var(--vscode-editor-background)',\n      borderLeft: '4px solid var(--vscode-activityBarBadge-background)',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '4px',\n    },\n    agentMessageContent: {\n      color: 'var(--vscode-foreground)',\n      fontSize: '14px',\n    },\n  };","import React, { useState, useRef, useEffect } from \"react\";\nimport { styles } from \"../styles\";\nimport AttachedFiles from \"../AttachedFiles\";\n\nconst IconEdit = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M11 4H4a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2v-7\" />\n    <path d=\"M18.5 2.5a2.121 2.121 0 013 3L12 15l-4 1 1-4 9.5-9.5z\" />\n  </svg>\n);\n\nexport const UserMessage = ({ message, onEdit, messageIndex }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedText, setEditedText] = useState(message.text);\n  const textareaRef = useRef(null);\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      if (editedText.trim() !== \"\") {\n        // Mantener los archivos en su formato original\n        onEdit(messageIndex, editedText, message.files);\n        setIsEditing(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = \"auto\";\n      textarea.style.height = `${Math.min(textarea.scrollHeight, 200)}px`; // Limita la altura máxima a 200px\n    }\n  }, [editedText]);\n\n  return (\n    <div style={{ ...styles.message, ...styles.userMessage }}>\n      <div style={styles.userMessageHeader}>\n        <AttachedFiles files={message.files || []} />\n        {!isEditing && (\n          <button\n            onClick={handleEdit}\n            style={styles.editButton}\n            title=\"Editar mensaje\"\n          >\n            <IconEdit />\n          </button>\n        )}\n      </div>\n      {isEditing ? (\n        <textarea\n          ref={textareaRef}\n          value={editedText}\n          onChange={(e) => setEditedText(e.target.value)}\n          onKeyDown={handleKeyPress}\n          style={{\n            ...styles.editInput,\n            minHeight: \"20px\",\n            maxHeight: \"100px\",\n            width: \"100%\",\n            backgroundColor: \"var(--vscode-input-background)\",\n            color: \"var(--vscode-input-foreground)\",\n            border: \"1px solid var(--vscode-input-border)\",\n            borderRadius: \"4px\",\n            padding: \"8px\",\n            resize: \"none\",\n            fontFamily: \"inherit\",\n            fontSize: \"inherit\",\n            overflow: \"auto\",\n          }}\n          autoFocus\n          placeholder=\"Presiona Enter para enviar\"\n        />\n      ) : (\n        <div>{message.text}</div>\n      )}\n    </div>\n  );\n};","import React, { memo, useState, useEffect, useMemo } from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-jsx\";\nimport \"prismjs/components/prism-typescript\";\nimport \"prismjs/components/prism-python\";\nimport \"prismjs/components/prism-json\";\nimport \"prismjs/components/prism-css\";\nimport \"prismjs/components/prism-markdown\";\nimport \"prismjs/components/prism-markup\"; \nimport { styles } from \"../styles\";\nimport { useAppContext } from \"../../../context/AppContext\";\nimport { IconApply, IconCopy, IconTick } from \"../../../IconstApp\";\n\nconst PrismConfig = memo(() => {\n  useEffect(() => {\n    // Initialize Prism languages\n    Prism.languages = {\n      ...Prism.languages,\n      javascript: Prism.languages.javascript,\n      jsx: Prism.languages.jsx,\n      typescript: Prism.languages.typescript,\n      python: Prism.languages.python,\n      json: Prism.languages.json,\n      css: Prism.languages.css,\n      markdown: Prism.languages.markdown,\n      html: Prism.languages.markup, \n      htm: Prism.languages.markup,  \n    };\n  }, []);\n\n  return null;\n});\n\nconst CodeBlockHeader = memo(({ filename, onCopy, onApply }) => {\n  const [copyState, setCopyState] = useState({ copied: false, timer: null });\n  const [applyState, setApplyState] = useState({ applied: false, timer: null });\n\n  const handleStateChange = async (action, state, setState) => {\n    if (state.timer) clearTimeout(state.timer);\n    \n    await action();\n    setState(prev => ({\n\n      [action === onCopy ? \"copied\" : \"applied\"]: true,\n      timer: setTimeout(() => {\n        setState(prev => ({ [action === onCopy ? \"copied\" : \"applied\"]: false, timer: null }));\n      }, 2000),\n    }));\n  };\n\n  return (\n    <div style={styles.codeBlockHeader}>\n      {filename && <span style={styles.filename}>{filename}</span>}\n      <div style={styles.buttonContainer}>\n        <button\n          onClick={() => handleStateChange(onCopy, copyState, setCopyState)}\n          style={styles.button}\n          title=\"Copy code\"\n        >\n          {copyState.copied ? <IconTick /> : <IconCopy />}\n        </button>\n        <button\n          onClick={() => handleStateChange(onApply, applyState, setApplyState)}\n          style={styles.button}\n          title=\"Apply changes\"\n        >\n          {applyState.applied ? <IconTick /> : <IconApply />}\n        </button>\n      </div>\n    </div>\n  );\n});\n\nconst CodeBlock = ({ language = \"javascript\", content, filename }) => {\n  const { vscode } = useAppContext();\n  const [copied, setCopied] = useState(false);\n\n  // Normalizar el lenguaje\n  const normalizedLanguage = useMemo(() => {\n    const lang = language?.toLowerCase() || \"javascript\";\n    // Mapear extensiones comunes a sus lenguajes correspondientes\n    const languageMap = {\n      'html': 'markup',\n      'htm': 'markup',\n      'xml': 'markup',\n      'svg': 'markup',\n    };\n    return languageMap[lang] || lang;\n  }, [language]);\n  \n  // Sanitizar el contenido si es necesario\n  const sanitizedContent = useMemo(() => {\n    if (!content) return \"\";\n    // Escapar caracteres especiales si el contenido es HTML/markup\n    if (['markup', 'html', 'htm', 'xml'].includes(normalizedLanguage)) {\n      return content.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    return content;\n  }, [content, normalizedLanguage]);\n\n  useEffect(() => {\n    // Asegurarse de que el lenguaje esté soportado\n    if (!Prism.languages[normalizedLanguage]) {\n      console.warn(`Language ${normalizedLanguage} not supported, falling back to text`);\n    }\n    Prism.highlightAll();\n  }, [sanitizedContent, normalizedLanguage]);\n\n  const handleCopy = async () => {\n    try {\n      // Copiar el contenido original, no el sanitizado\n      await navigator.clipboard.writeText(content);\n      return true;\n    } catch (err) {\n      console.error(\"Failed to copy text:\", err);\n      return false;\n    }\n  };\n\n  const handleApply = async () => {\n    try {\n   \n    } catch (err) {\n      console.error(\"Failed to apply changes:\", err);\n      return false;\n    }\n  };\n\n  // No renderizar si no hay contenido\n  if (!sanitizedContent?.trim()) return null;\n\n  return (\n    <div style={styles.codeBlockContainer}>\n      <PrismConfig />\n      <CodeBlockHeader\n        filename={filename}\n        onCopy={handleCopy}\n        onApply={handleApply}\n      />\n      <pre style={{\n        ...styles.pre,\n        backgroundColor: 'transparent',\n        margin: 0,\n        padding: '1em',\n        borderRadius: '0 0 4px 4px',\n        overflow: 'auto',\n      }}>\n        <code \n          className={`language-${normalizedLanguage}`} \n          style={{\n            fontFamily: 'Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace',\n            fontSize: '14px',\n            lineHeight: '1.5',\n            tabSize: 2,\n          }}\n          dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n        />\n      </pre>\n    </div>\n  );\n};\n\nexport default memo(CodeBlock);\n","import React from 'react';\nimport Markdown from 'markdown-to-jsx';\nimport { styles } from '../styles';\n\nconst MarkdownContent = ({ content }) => {\n  return (\n    <div style={styles.markdownContent}>\n      <Markdown>{content}</Markdown>\n    </div>\n  );\n};\n\nexport default MarkdownContent;\n","\n\n// ui/Components/ChatMessages/styles.js\nexport const styles = {\n  container: {\n    flexDirection: \"column\",\n    height: \"100%\",\n    padding: \"10px\",\n  },\n  chatContainer: {\n    flex: 1,\n    overflowY: \"auto\",\n    padding: \"10px\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  emptyContainer: {\n    flex: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n  },\n  message: {\n    marginBottom: \"10px\",\n    padding: \"8px\",\n    borderRadius: \"4px\",\n    maxWidth: \"100%\",\n    wordWrap: \"break-word\",\n  },\n  userMessage: {\n    alignSelf: \"flex-end\",\n    backgroundColor: \"var(--vscode-editor-background)\",\n    color: \"var(--vscode-button-foreground)\",\n    border: \"1px solid var(--vscode-input-border)\",\n  },\n  aiMessage: {\n    alignSelf: \"flex-start\",\n  },\n  codeBlockContainer: {\n    margin: '1em 0',\n    borderRadius: '4px',\n    overflow: 'hidden',\n    backgroundColor: 'var(--vscode-input-background)',\n    border: '1px solid var(--vscode-input-border)',\n  },\n  codeBlockHeader: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    padding: '8px 16px',\n    borderBottom: '1px solid var(--vscode-input-border)',\n  },\n  filename: {\n    fontFamily: 'Consolas, Monaco, monospace',\n    marginRight: 'auto',\n    color: 'var(--vscode-foreground)',\n  },\n  buttonContainer: {\n    display: 'flex',\n    gap: '8px',\n  },\n  button: {\n    background: 'transparent',\n    border: 'none',\n    cursor: 'pointer',\n    padding: '4px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'var(--vscode-foreground)',\n    borderRadius: '4px',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'var(--vscode-toolbar-hoverBackground)',\n    },\n  },\n  pre: {\n    margin: 0,\n    padding: '1em',\n    overflow: 'auto',\n    fontSize: '14px',\n    lineHeight: '1.5',\n    color: 'var(--vscode-foreground)',\n    '&::WebkitScrollbar': {\n      width: '8px',\n      height: '8px',\n    },\n    '&::WebkitScrollbarTrack': {\n      background: 'transparent',\n    },\n    '&::WebkitScrollbarThumb': {\n      background: 'var(--vscode-scrollbarSlider-background)',\n      borderRadius: '4px',\n      '&:hover': {\n        background: 'var(--vscode-scrollbarSlider-hoverBackground)',\n      },\n    },\n  },\n  attachedFiles: {\n    display: \"flex\",\n    gap: \"4px\",\n    flexWrap: \"wrap\",\n    marginBottom: \"8px\",\n  },\n  fileTag: {\n    display: \"flex\",\n    alignItems: \"center\",\n    backgroundColor: \"var(--vscode-button-secondaryBackground)\",\n    color: \"var(--vscode-button-secondaryForeground)\",\n    padding: \"2px 8px\",\n    borderRadius: \"4px\",\n    fontSize: \"12px\",\n  },\n  copyButton: {\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    color: \"var(--vscode-button-foreground)\",\n    cursor: \"pointer\",\n    padding: \"2px 6px\",\n    fontSize: \"12px\",\n    borderRadius: \"2px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"4px\",\n    transition: \"opacity 0.2s\",\n    \"&:hover\": {\n      opacity: 0.8,\n    },\n  },\n  userMessageHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n    marginBottom: \"4px\",\n  },\n  editButton: {\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    padding: \"2px\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    alignItems: \"center\",\n    opacity: 0.7,\n    color: \"var(--vscode-button-foreground)\",\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n  editInput: {\n    minHeight: \"60px\",\n    width: \"100%\",\n    backgroundColor: \"var(--vscode-input-background)\",\n    color: \"var(--vscode-input-foreground)\",\n    border: \"1px solid var(--vscode-input-border)\",\n    borderRadius: \"4px\",\n    padding: \"8px\",\n    resize: \"vertical\",\n    fontFamily: \"inherit\",\n    fontSize: \"inherit\",\n  },\n  markdownContent: {\n    padding: '8px',\n    lineHeight: '1.5',\n    '& h1, & h2, & h3, & h4, & h5, & h6': {\n      marginTop: '16px',\n      marginBottom: '8px',\n      fontWeight: 'bold',\n    },\n    '& p': {\n      marginBottom: '8px',\n    },\n    '& ul, & ol': {\n      paddingLeft: '20px',\n      marginBottom: '8px',\n    },\n    '& strong': {\n      fontWeight: 'bold',\n    },\n    '& em': {\n      fontStyle: 'italic',\n    },\n  },\n};\n","import React from \"react\";\nexport const IconTick = () => (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <polyline points=\"20 6 9 17 4 12\" />\n    </svg>\n  );\n  \nexport  const IconCopy = () => (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n      <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\n    </svg>\n  );\n  \nexport const IconApply = () => (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M5 13l4 4L19 7\" />\n    </svg>\n  );"],"names":["React","styles","getFileName","filePath","split","pop","AttachedFiles","_ref","files","length","createElement","style","attachedFiles","map","file","i","key","fileTag","path","useRef","useEffect","memo","useState","UserMessage","AIMessage","AgentMessage","useAppContext","Message","message","messageIndex","onEdit","formattedMessage","_objectSpread","role","isUser","isAgent","text","content","Array","isArray","undefined","agente","acción","VirtualizedMessages","_ref2","messages","_ref2$visibleCount","visibleCount","_useState","Math","max","_useState2","_slicedToArray","startIndex","setStartIndex","visibleMessages","slice","Fragment","loadMoreContainer","loadMoreButton","onClick","index","concat","ChatMessages","_ref3","children","_useAppContext","isLoading","currentMessage","handleSendMessage","messagesEndRef","current","scrollIntoView","behavior","handleEditMessage","newText","filePaths","useVirtualization","container","ref","CodeBlock","MarkdownContent","parseMessage","type","parts","codeRegex","lastIndex","match","exec","push","_split","_split2","language","filename","trim","confirmationStyles","buttonsContainer","display","gap","marginTop","button","padding","borderRadius","cursor","fontWeight","border","transition","applyButton","backgroundColor","color","rejectButton","vscode","showConfirmButtons","setShowConfirmButtons","hasConfirmationRequest","includes","handleConfirmation","confirmed","postMessage","aiMessage","part","agentMessage","agentMessageContent","borderLeft","margin","fontSize","IconEdit","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","isEditing","setIsEditing","_useState3","_useState4","editedText","setEditedText","textareaRef","handleEdit","handleKeyPress","e","shiftKey","preventDefault","textarea","min","scrollHeight","userMessage","userMessageHeader","editButton","title","value","onChange","target","onKeyDown","editInput","minHeight","maxHeight","resize","fontFamily","overflow","autoFocus","placeholder","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","from","test","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","useMemo","Prism","IconApply","IconCopy","IconTick","PrismConfig","languages","javascript","jsx","typescript","python","json","css","markdown","html","markup","htm","CodeBlockHeader","onCopy","onApply","copied","timer","copyState","setCopyState","applied","applyState","setApplyState","handleStateChange","_callee","action","state","setState","_callee$","_context","clearTimeout","setTimeout","_x","_x2","_x3","codeBlockHeader","buttonContainer","_ref5","_ref5$language","_useState5","_useState6","setCopied","normalizedLanguage","lang","toLowerCase","languageMap","sanitizedContent","replace","console","warn","highlightAll","handleCopy","_ref6","_callee2","_callee2$","_context2","navigator","clipboard","writeText","t0","error","handleApply","_ref7","_callee3","_callee3$","_context3","codeBlockContainer","pre","className","lineHeight","tabSize","dangerouslySetInnerHTML","__html","Markdown","markdownContent","flexDirection","chatContainer","flex","overflowY","emptyContainer","alignItems","justifyContent","marginBottom","maxWidth","wordWrap","alignSelf","borderBottom","marginRight","background","flexWrap","copyButton","opacity","paddingLeft","fontStyle","points","x","rx","ry"],"sourceRoot":""}